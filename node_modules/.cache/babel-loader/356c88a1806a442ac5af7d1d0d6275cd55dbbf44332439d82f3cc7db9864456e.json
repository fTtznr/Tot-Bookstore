{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"remove-book-form\\\"><h2 class=\\\"center\\\">Buscar Livro</h2><h4 class=\\\"center\\\">Remoção ou Atualização de Dados</h4><form><ul><li class=\\\"form-field\\\"><label for=\\\"title\\\">Título do Livro:</label><br><input type=\\\"text\\\" id=\\\"name\\\" name=\\\"title\\\"><br><br></li><li class=\\\"form-field\\\"><label for=\\\"bookID\\\">ID do livro:</label><br><input type=\\\"book-id\\\" id=\\\"book-id\\\" name=\\\"book-id\\\"><br><br></li><li class=\\\"form-field\\\"><label for=\\\"author\\\">Autor</label><br><input type=\\\"text\\\" id=\\\"author\\\" name=\\\"author\\\"><br><br></li><li class=\\\"form-field\\\"><label for=\\\"isbn\\\">ISBN</label><br><input type=\\\"isbn\\\" id=\\\"isbn\\\" name=\\\"isbn\\\"><br><br></li><li><div class=\\\"price-input\\\"><div class=\\\"field\\\"><span>Min</span><input type=\\\"number\\\" class=\\\"input-min\\\" value=\\\"2500\\\"></div><div class=\\\"separator\\\">-</div><div class=\\\"field\\\"><span>Max</span><input type=\\\"number\\\" class=\\\"input-max\\\" value=\\\"7500\\\"></div></div><div class=\\\"slider\\\"><div class=\\\"progress\\\"></div></div><div class=\\\"range-input\\\"><input type=\\\"range\\\" class=\\\"range-min\\\" min=\\\"0\\\" max=\\\"10000\\\" value=\\\"2500\\\" step=\\\"100\\\"><input type=\\\"range\\\" class=\\\"range-max\\\" min=\\\"0\\\" max=\\\"10000\\\" value=\\\"7500\\\" step=\\\"100\\\"></div></li></ul><input type=\\\"submit\\\" class=\\\"center\\\" value=\\\"Buscar Livro\\\"></form></div>\", 1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProductBox = _resolveComponent(\"ProductBox\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_ProductBox, {\n    books: $data.books\n  }, null, 8 /* PROPS */, [\"books\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;6DAEIA,UAyDM,EAENC,aAA4BC;IAAfC,KAAK,EAAEC;EAAK","names":["_hoisted_1","_createVNode","_component_ProductBox","books","$data"],"sourceRoot":"","sources":["C:\\Users\\felip\\Desktop\\Tot Bookstore\\src\\views\\SearchView.vue"],"sourcesContent":["<template>\r\n\r\n    <div class=\"remove-book-form\">\r\n\r\n        <h2 class=\"center\">Buscar Livro</h2>\r\n        <h4 class=\"center\">Remoção ou Atualização de Dados</h4>\r\n\r\n        <form>\r\n\r\n            <ul>\r\n\r\n                <li class=\"form-field\">\r\n                    <label for=\"title\">Título do Livro:</label><br>\r\n                    <input type=\"text\" id=\"name\" name=\"title\"><br><br>\r\n                </li>\r\n                \r\n                <li class=\"form-field\">                    \r\n                    <label for=\"bookID\">ID do livro:</label><br>\r\n                    <input type=\"book-id\" id=\"book-id\" name=\"book-id\"><br><br>\r\n                </li>                    \r\n                \r\n                <li class=\"form-field\">\r\n                    <label for=\"author\">Autor</label><br>\r\n                    <input type=\"text\" id=\"author\" name=\"author\"><br><br>\r\n                </li>\r\n\r\n                <li class=\"form-field\">\r\n                    <label for=\"isbn\">ISBN</label><br>\r\n                    <input type=\"isbn\" id=\"isbn\" name=\"isbn\"><br><br>\r\n                </li>\r\n\r\n                <li>\r\n                    <div class=\"price-input\">\r\n                        <div class=\"field\">\r\n                        <span>Min</span>\r\n                        <input type=\"number\" class=\"input-min\" value=\"2500\">\r\n                        </div>\r\n                        <div class=\"separator\">-</div>\r\n                        <div class=\"field\">\r\n                        <span>Max</span>\r\n                        <input type=\"number\" class=\"input-max\" value=\"7500\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"slider\">\r\n                        <div class=\"progress\"></div>\r\n                    </div>\r\n                    <div class=\"range-input\">\r\n                        <input type=\"range\" class=\"range-min\" min=\"0\" max=\"10000\" value=\"2500\" step=\"100\">\r\n                        <input type=\"range\" class=\"range-max\" min=\"0\" max=\"10000\" value=\"7500\" step=\"100\">\r\n                    </div>\r\n\r\n                </li>\r\n                \r\n            </ul>\r\n\r\n            <input type=\"submit\" class=\"center\" value=\"Buscar Livro\">\r\n\r\n        </form>\r\n\r\n    </div>\r\n\r\n    <ProductBox :books=\"books\"/>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport ProductBox from '@/components/ProductBox.vue'\r\n\r\nexport default\r\n{\r\n    name: \"Search\",\r\n\r\n    components: \r\n    { \r\n      ProductBox\r\n    },\r\n    \r\n    data(){\r\n\r\n        return{ books: null }\r\n\r\n    },\r\n    \r\n    created(){\r\n        \r\n        this.books = JSON.parse(localStorage.getItem(\"searchResult\"))\r\n        this.$forceUpdate()\r\n\r\n        this.setPriceRange()\r\n    },\r\n     \r\n    methods:{\r\n\r\n        setPriceRange(){\r\n\r\n            const rangeInput = document.querySelectorAll(\".range-input input\"),\r\n            priceInput = document.querySelectorAll(\".price-input input\"),\r\n            range = document.querySelector(\".slider .progress\");\r\n            let priceGap = 1000;\r\n\r\n            priceInput.forEach(input =>{\r\n                input.addEventListener(\"input\", e =>{\r\n                    let minPrice = parseInt(priceInput[0].value),\r\n                    maxPrice = parseInt(priceInput[1].value);\r\n                    \r\n                    if((maxPrice - minPrice >= priceGap) && maxPrice <= rangeInput[1].max){\r\n                        if(e.target.className === \"input-min\"){\r\n                            rangeInput[0].value = minPrice;\r\n                            range.style.left = ((minPrice / rangeInput[0].max) * 100) + \"%\";\r\n                        }else{\r\n                            rangeInput[1].value = maxPrice;\r\n                            range.style.right = 100 - (maxPrice / rangeInput[1].max) * 100 + \"%\";\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n\r\n            rangeInput.forEach(input =>{\r\n                input.addEventListener(\"input\", e =>{\r\n                    let minVal = parseInt(rangeInput[0].value),\r\n                    maxVal = parseInt(rangeInput[1].value);\r\n\r\n                    if((maxVal - minVal) < priceGap){\r\n                        if(e.target.className === \"range-min\"){\r\n                            rangeInput[0].value = maxVal - priceGap\r\n                        }else{\r\n                            rangeInput[1].value = minVal + priceGap;\r\n                        }\r\n                    }else{\r\n                        priceInput[0].value = minVal;\r\n                        priceInput[1].value = maxVal;\r\n                        range.style.left = ((minVal / rangeInput[0].max) * 100) + \"%\";\r\n                        range.style.right = 100 - (maxVal / rangeInput[1].max) * 100 + \"%\";\r\n                    }\r\n                });\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    \r\n\r\n}\r\n\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}