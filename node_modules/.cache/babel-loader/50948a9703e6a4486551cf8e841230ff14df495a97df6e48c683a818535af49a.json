{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<div id=\\\"audio-player-container\\\"><audio src=\\\"\\\" preload=\\\"metadata\\\" loop></audio><p>audio player ish</p><button id=\\\"play-icon\\\"></button><span id=\\\"current-time\\\" class=\\\"time\\\">0:00</span><input type=\\\"range\\\" id=\\\"seek-slider\\\" max=\\\"100\\\" value=\\\"0\\\"><span id=\\\"duration\\\" class=\\\"time\\\">0:00</span><output id=\\\"volume-output\\\">100</output><input type=\\\"range\\\" id=\\\"volume-slider\\\" max=\\\"100\\\" value=\\\"100\\\"><button id=\\\"mute-icon\\\"></button></div>\", 1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_audio_player = _resolveComponent(\"audio-player\", true);\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_audio_player, {\n    \"data-src\": $props.audio\n  }, null, 8 /* PROPS */, [\"data-src\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;6DAEIA,UAUM,EAENC,aAA+CC;IAAhC,UAAQ,EAAEC;EAAK","names":["_hoisted_1","_createVNode","_component_audio_player","$props"],"sourceRoot":"","sources":["C:\\Users\\felip\\Desktop\\Tot Bookstore\\src\\components\\AudioPlayer.vue"],"sourcesContent":["<template>\r\n   \r\n    <div id=\"audio-player-container\">\r\n        <audio src=\"\" preload=\"metadata\" loop></audio>\r\n        <p>audio player ish</p>\r\n        <button id=\"play-icon\"></button>\r\n        <span id=\"current-time\" class=\"time\">0:00</span>\r\n        <input type=\"range\" id=\"seek-slider\" max=\"100\" value=\"0\">\r\n        <span id=\"duration\" class=\"time\">0:00</span>\r\n        <output id=\"volume-output\">100</output>\r\n        <input type=\"range\" id=\"volume-slider\" max=\"100\" value=\"100\">\r\n        <button id=\"mute-icon\"></button>\r\n    </div>\r\n\r\n    <audio-player :data-src=\"audio\"></audio-player>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport lottieWeb from 'https://cdn.skypack.dev/lottie-web';\r\n\r\nexport default {\r\n\r\n    name: \"AudioPlayer\",\r\n\r\n    props: {audio: String},\r\n    \r\n    mounted(){\r\n        \r\n        \r\n        class AudioPlayer extends HTMLElement {\r\n            constructor() {\r\n                super();\r\n                const template = document.querySelector('template');\r\n                const templateContent = template.content;\r\n                const shadow = this.attachShadow({mode: 'open'});\r\n                shadow.appendChild(templateContent.cloneNode(true));\r\n            }\r\n\r\n            connectedCallback() {\r\n                everything(this);\r\n            }\r\n        }\r\n\r\n        const everything = function(element) {  \r\n        const shadow = element.shadowRoot;\r\n\r\n            const audioPlayerContainer = shadow.getElementById('audio-player-container');\r\n            const playIconContainer = shadow.getElementById('play-icon');\r\n            const seekSlider = shadow.getElementById('seek-slider');\r\n            const volumeSlider = shadow.getElementById('volume-slider');\r\n            const muteIconContainer = shadow.getElementById('mute-icon');\r\n            const audio = shadow.querySelector('audio');\r\n            const durationContainer = shadow.getElementById('duration');\r\n            const currentTimeContainer = shadow.getElementById('current-time');\r\n            const outputContainer = shadow.getElementById('volume-output');\r\n            let playState = 'play';\r\n            let muteState = 'unmute';\r\n            let raf = null;\r\n\r\n            audio.src = element.getAttribute('data-src');\r\n\r\n            const playAnimation = lottieWeb.loadAnimation({\r\n                container: playIconContainer,\r\n                path: 'https://maxst.icons8.com/vue-static/landings/animated-icons/icons/pause/pause.json',\r\n                renderer: 'svg',\r\n                loop: false,\r\n                autoplay: false,\r\n                name: \"Play Animation\",\r\n            });\r\n                \r\n            const muteAnimation = lottieWeb.loadAnimation({\r\n                container: muteIconContainer,\r\n                path: 'https://maxst.icons8.com/vue-static/landings/animated-icons/icons/mute/mute.json',\r\n                renderer: 'svg',\r\n                loop: false,\r\n                autoplay: false,\r\n                name: \"Mute Animation\",\r\n            });\r\n                \r\n            playAnimation.goToAndStop(14, true);\r\n\r\n            const whilePlaying = () => {\r\n                seekSlider.value = Math.floor(audio.currentTime);\r\n                currentTimeContainer.textContent = calculateTime(seekSlider.value);\r\n                audioPlayerContainer.style.setProperty('--seek-before-width', `${seekSlider.value / seekSlider.max * 100}%`);\r\n                raf = requestAnimationFrame(whilePlaying);\r\n            }\r\n\r\n            const showRangeProgress = (rangeInput) => {\r\n                if(rangeInput === seekSlider) audioPlayerContainer.style.setProperty('--seek-before-width', rangeInput.value / rangeInput.max * 100 + '%');\r\n                else audioPlayerContainer.style.setProperty('--volume-before-width', rangeInput.value / rangeInput.max * 100 + '%');\r\n            }\r\n\r\n            const calculateTime = (secs) => {\r\n                const minutes = Math.floor(secs / 60);\r\n                const seconds = Math.floor(secs % 60);\r\n                const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n                return `${minutes}:${returnedSeconds}`;\r\n            }\r\n                \r\n            const displayDuration = () => {\r\n                durationContainer.textContent = calculateTime(audio.duration);\r\n            }\r\n                \r\n            const setSliderMax = () => {\r\n                seekSlider.max = Math.floor(audio.duration);\r\n            }\r\n                \r\n            const displayBufferedAmount = () => {\r\n                const bufferedAmount = Math.floor(audio.buffered.end(audio.buffered.length - 1));\r\n                audioPlayerContainer.style.setProperty('--buffered-width', `${(bufferedAmount / seekSlider.max) * 100}%`);\r\n            }\r\n\r\n            if (audio.readyState > 0) {\r\n                displayDuration();\r\n                setSliderMax();\r\n                displayBufferedAmount();\r\n            } else {\r\n                audio.addEventListener('loadedmetadata', () => {\r\n                    displayDuration();\r\n                    setSliderMax();\r\n                    displayBufferedAmount();\r\n                });\r\n            }\r\n\r\n            playIconContainer.addEventListener('click', () => {\r\n                if(playState === 'play') {\r\n                    audio.play();\r\n                    playAnimation.playSegments([14, 27], true);\r\n                    requestAnimationFrame(whilePlaying);\r\n                    playState = 'pause';\r\n                } else {\r\n                    audio.pause();\r\n                    playAnimation.playSegments([0, 14], true);\r\n                    cancelAnimationFrame(raf);\r\n                    playState = 'play';\r\n                }\r\n            });\r\n                \r\n            muteIconContainer.addEventListener('click', () => {\r\n                if(muteState === 'unmute') {\r\n                    muteAnimation.playSegments([0, 15], true);\r\n                    audio.muted = true;\r\n                    muteState = 'mute';\r\n                } else {\r\n                    muteAnimation.playSegments([15, 25], true);\r\n                    audio.muted = false;\r\n                    muteState = 'unmute';\r\n                }\r\n            });\r\n\r\n            audio.addEventListener('progress', displayBufferedAmount);\r\n\r\n            seekSlider.addEventListener('input', (e) => {\r\n                showRangeProgress(e.target);\r\n                currentTimeContainer.textContent = calculateTime(seekSlider.value);\r\n                if(!audio.paused) {\r\n                    cancelAnimationFrame(raf);\r\n                }\r\n            });\r\n\r\n            seekSlider.addEventListener('change', () => {\r\n                audio.currentTime = seekSlider.value;\r\n                if(!audio.paused) {\r\n                    requestAnimationFrame(whilePlaying);\r\n                }\r\n            });\r\n\r\n            volumeSlider.addEventListener('input', (e) => {\r\n                const value = e.target.value;\r\n                showRangeProgress(e.target);\r\n                outputContainer.textContent = value;\r\n                audio.volume = value / 100;\r\n            });\r\n\r\n            if('mediaSession' in navigator) {\r\n                navigator.mediaSession.metadata = new MediaMetadata({\r\n                    title: 'Komorebi',\r\n                    artist: 'Anitek',\r\n                    album: 'MainStay',\r\n                    artwork: [\r\n                        { src: 'https://assets.codepen.io/4358584/1.300.jpg', sizes: '96x96', type: 'image/png' },\r\n                        { src: 'https://assets.codepen.io/4358584/1.300.jpg', sizes: '128x128', type: 'image/png' },\r\n                        { src: 'https://assets.codepen.io/4358584/1.300.jpg', sizes: '192x192', type: 'image/png' },\r\n                        { src: 'https://assets.codepen.io/4358584/1.300.jpg', sizes: '256x256', type: 'image/png' },\r\n                        { src: 'https://assets.codepen.io/4358584/1.300.jpg', sizes: '384x384', type: 'image/png' },\r\n                        { src: 'https://assets.codepen.io/4358584/1.300.jpg', sizes: '512x512', type: 'image/png' }\r\n                    ]\r\n                });\r\n                navigator.mediaSession.setActionHandler('play', () => {\r\n                    if(playState === 'play') {\r\n                        audio.play();\r\n                        playAnimation.playSegments([14, 27], true);\r\n                        requestAnimationFrame(whilePlaying);\r\n                        playState = 'pause';\r\n                    } else {\r\n                        audio.pause();\r\n                        playAnimation.playSegments([0, 14], true);\r\n                        cancelAnimationFrame(raf);\r\n                        playState = 'play';\r\n                    }\r\n                });\r\n                navigator.mediaSession.setActionHandler('pause', () => {\r\n                    if(playState === 'play') {\r\n                        audio.play();\r\n                        playAnimation.playSegments([14, 27], true);\r\n                        requestAnimationFrame(whilePlaying);\r\n                        playState = 'pause';\r\n                    } else {\r\n                        audio.pause();\r\n                        playAnimation.playSegments([0, 14], true);\r\n                        cancelAnimationFrame(raf);\r\n                        playState = 'play';\r\n                    }\r\n                });\r\n                navigator.mediaSession.setActionHandler('seekbackward', (details) => {\r\n                    audio.currentTime = audio.currentTime - (details.seekOffset || 10);\r\n                });\r\n                navigator.mediaSession.setActionHandler('seekforward', (details) => {\r\n                    audio.currentTime = audio.currentTime + (details.seekOffset || 10);\r\n                });\r\n                navigator.mediaSession.setActionHandler('seekto', (details) => {\r\n                    if (details.fastSeek && 'fastSeek' in audio) {\r\n                    audio.fastSeek(details.seekTime);\r\n                    return;\r\n                    }\r\n                    audio.currentTime = details.seekTime;\r\n                });\r\n                navigator.mediaSession.setActionHandler('stop', () => {\r\n                    audio.currentTime = 0;\r\n                    seekSlider.value = 0;\r\n                    audioPlayerContainer.style.setProperty('--seek-before-width', '0%');\r\n                    currentTimeContainer.textContent = '0:00';\r\n                    if(playState === 'pause') {\r\n                        playAnimation.playSegments([0, 14], true);\r\n                        cancelAnimationFrame(raf);\r\n                        playState = 'play';\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        customElements.define('audio-player', AudioPlayer);\r\n\r\n     }\r\n    \r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n    button {\r\n        padding: 0;\r\n        border: 0;\r\n        background: transparent;\r\n        cursor: pointer;\r\n        outline: none;\r\n        width: 40px;\r\n        height: 40px;\r\n        float: left;\r\n    }\r\n    #audio-player-container {\r\n        position: relative;\r\n        margin: 100px 2.5% auto 2.5%;\r\n        width: 95%;\r\n        max-width: 500px;\r\n        height: 132px;\r\n        background: #fff;\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        --seek-before-width: 0%;\r\n        --volume-before-width: 100%;\r\n        --buffered-width: 0%;\r\n        letter-spacing: -0.5px;\r\n    }\r\n    #audio-player-container::before {\r\n        position: absolute;\r\n        content: '';\r\n        width: calc(100% + 4px);\r\n        height: calc(100% + 4px);\r\n        left: -2px;\r\n        top: -2px;\r\n        background: linear-gradient(to left, #007db5, #ff8a00);\r\n        z-index: -1;\r\n    }\r\n    p {\r\n        position: absolute;\r\n        top: -18px;\r\n        right: 5%;\r\n        padding: 0 5px;\r\n        margin: 0;\r\n        font-size: 28px;\r\n        background: #fff;\r\n    }\r\n    #play-icon {\r\n        margin: 20px 2.5% 10px 2.5%;\r\n    }\r\n    path {\r\n        stroke: #007db5;\r\n    }\r\n    .time {\r\n        display: inline-block;\r\n        width: 37px;\r\n        text-align: center;\r\n        font-size: 20px;\r\n        margin: 28.5px 0 18.5px 0;\r\n        float: left;\r\n    }\r\n    output {\r\n        display: inline-block;\r\n        width: 32px;\r\n        text-align: center;\r\n        font-size: 20px;\r\n        margin: 10px 2.5% 0 5%;\r\n        float: left;\r\n        clear: left;\r\n    }\r\n    #volume-slider {\r\n        margin: 10px 2.5%;\r\n        width: 58%;\r\n    }\r\n    #volume-slider::-webkit-slider-runnable-track {\r\n        background: rgba(0, 125, 181, 0.6);\r\n    }\r\n    #volume-slider::-moz-range-track {\r\n        background: rgba(0, 125, 181, 0.6);\r\n    }\r\n    #volume-slider::-ms-fill-upper {\r\n        background: rgba(0, 125, 181, 0.6);\r\n    }\r\n    #volume-slider::before {\r\n        width: var(--volume-before-width);\r\n    }\r\n    #mute-icon {\r\n        margin: 0 2.5%;\r\n    }\r\n    input[type=\"range\"] {\r\n        position: relative;\r\n        -webkit-appearance: none;\r\n        width: 48%;\r\n        margin: 0;\r\n        padding: 0;\r\n        height: 19px;\r\n        margin: 30px 2.5% 20px 2.5%;\r\n        float: left;\r\n        outline: none;\r\n    }\r\n    input[type=\"range\"]::-webkit-slider-runnable-track {\r\n        width: 100%;\r\n        height: 3px;\r\n        cursor: pointer;\r\n        background: linear-gradient(to right, rgba(0, 125, 181, 0.6) var(--buffered-width), rgba(0, 125, 181, 0.2) var(--buffered-width));\r\n    }\r\n    input[type=\"range\"]::before {\r\n        position: absolute;\r\n        content: \"\";\r\n        top: 8px;\r\n        left: 0;\r\n        width: var(--seek-before-width);\r\n        height: 3px;\r\n        background-color: #007db5;\r\n        cursor: pointer;\r\n    }\r\n    input[type=\"range\"]::-webkit-slider-thumb {\r\n        position: relative;\r\n        -webkit-appearance: none;\r\n        box-sizing: content-box;\r\n        border: 1px solid #007db5;\r\n        height: 15px;\r\n        width: 15px;\r\n        border-radius: 50%;\r\n        background-color: #fff;\r\n        cursor: pointer;\r\n        margin: -7px 0 0 0;\r\n    }\r\n    input[type=\"range\"]:active::-webkit-slider-thumb {\r\n        transform: scale(1.2);\r\n        background: #007db5;\r\n    }\r\n    input[type=\"range\"]::-moz-range-track {\r\n        width: 100%;\r\n        height: 3px;\r\n        cursor: pointer;\r\n        background: linear-gradient(to right, rgba(0, 125, 181, 0.6) var(--buffered-width), rgba(0, 125, 181, 0.2) var(--buffered-width));\r\n    }\r\n    input[type=\"range\"]::-moz-range-progress {\r\n        background-color: #007db5;\r\n    }\r\n    input[type=\"range\"]::-moz-focus-outer {\r\n        border: 0;\r\n    }\r\n    input[type=\"range\"]::-moz-range-thumb {\r\n        box-sizing: content-box;\r\n        border: 1px solid #007db5;\r\n        height: 15px;\r\n        width: 15px;\r\n        border-radius: 50%;\r\n        background-color: #fff;\r\n        cursor: pointer;\r\n    }\r\n    input[type=\"range\"]:active::-moz-range-thumb {\r\n        transform: scale(1.2);\r\n        background: #007db5;\r\n    }\r\n    input[type=\"range\"]::-ms-track {\r\n        width: 100%;\r\n        height: 3px;\r\n        cursor: pointer;\r\n        background: transparent;\r\n        border: solid transparent;\r\n        color: transparent;\r\n    }\r\n    input[type=\"range\"]::-ms-fill-lower {\r\n        background-color: #007db5;\r\n    }\r\n    input[type=\"range\"]::-ms-fill-upper {\r\n        background: linear-gradient(to right, rgba(0, 125, 181, 0.6) var(--buffered-width), rgba(0, 125, 181, 0.2) var(--buffered-width));\r\n    }\r\n    input[type=\"range\"]::-ms-thumb {\r\n        box-sizing: content-box;\r\n        border: 1px solid #007db5;\r\n        height: 15px;\r\n        width: 15px;\r\n        border-radius: 50%;\r\n        background-color: #fff;\r\n        cursor: pointer;\r\n    }\r\n    input[type=\"range\"]:active::-ms-thumb {\r\n        transform: scale(1.2);\r\n        background: #007db5;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}