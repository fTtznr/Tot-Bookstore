{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Message from '@/components/Message.vue';\nimport Dashboard from '@/components/Dashboard.vue';\nimport { sessionStore } from '@/store/session';\nexport default {\n  name: 'Profile',\n  components: {\n    Message,\n    Dashboard\n  },\n  data() {\n    return {\n      email: null,\n      password: null,\n      suName: null,\n      suEmail: null,\n      suPassword: null,\n      isLogged: false,\n      createAccount: false,\n      suggestion: \"Criar uma conta\",\n      msg: null,\n      session: null\n    };\n  },\n  created() {\n    this.session = sessionStore();\n  },\n  methods: {\n    async signUp(e) {\n      e.preventDefault();\n      const data = {\n        name: this.suName,\n        email: this.suEmail,\n        password: this.suPassword,\n        admin: false\n      };\n      const dataJSON = JSON.stringify(data);\n      const req = await fetch(\"http://localhost:3000/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: dataJSON\n      });\n      const res = await req.json();\n      this.suName = null;\n      this.suEmail = null;\n      this.suPassword = null;\n      this.changeForm();\n      this.msg = \"Conta criada com sucesso! Autentique-se pela primeira vez.\";\n    },\n    async login(e) {\n      e.preventDefault();\n      const req = await fetch(\"http://localhost:3000/users\");\n      const users = await req.json();\n      let found = false;\n      let user = null;\n      for (let u of users) {\n        if (u.email === this.email && u.password === this.password) {\n          found = true;\n          user = u;\n          break;\n        }\n      }\n      if (found) {\n        let session = sessionStore();\n        session.isLoggedIn = true;\n        session.user = user;\n        this.$router.push(\"/\");\n      } else this.msg = \"Usuário ou senha incorretos!\";\n    },\n    changeForm() {\n      this.createAccount = !this.createAccount;\n      if (this.createAccount) this.suggestion = \"Log in\";else this.suggestion = \"Criar uma conta\";\n    }\n  }\n};","map":{"version":3,"mappings":";AAmEA,OAAOA,OAAM,MAAO,0BAAyB;AAC7C,OAAOC,SAAQ,MAAO,4BAA2B;AACjD,SAASC,YAAW,QAAS,iBAAgB;AAG7C,eAAe;EAEXC,IAAI,EAAE,SAAS;EAEfC,UAAU,EAAE;IACRJ,OAAO;IACPC;EACJ,CAAC;EAEDI,IAAI,GAAG;IAEH,OAAO;MAEHC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE,IAAI;MACZC,OAAO,EAAE,IAAI;MACbC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE,KAAK;MACfC,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAE,iBAAiB;MAC7BC,GAAG,EAAE,IAAI;MACTC,OAAO,EAAC;IAEZ;EAEJ,CAAC;EAEDC,OAAO,GAAE;IAEL,IAAI,CAACD,OAAM,GAAIb,YAAY,EAAC;EAEhC,CAAC;EAGDe,OAAO,EAAE;IAEN,MAAMC,MAAM,CAACC,CAAC,EAAE;MAEXA,CAAC,CAACC,cAAc,EAAC;MAEjB,MAAMf,IAAG,GAAI;QAETF,IAAI,EAAE,IAAI,CAACK,MAAM;QACjBF,KAAK,EAAE,IAAI,CAACG,OAAO;QACnBF,QAAQ,EAAE,IAAI,CAACG,UAAU;QACzBW,KAAK,EAAC;MAEV;MAEA,MAAMC,QAAO,GAAIC,IAAI,CAACC,SAAS,CAACnB,IAAI;MAEpC,MAAMoB,GAAE,GAAI,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAEnDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,IAAI,EAAEP;MACV,CAAC;MAED,MAAMQ,GAAE,GAAI,MAAML,GAAG,CAACM,IAAI,EAAC;MAE3B,IAAI,CAACvB,MAAK,GAAI,IAAG;MACjB,IAAI,CAACC,OAAM,GAAI,IAAG;MAClB,IAAI,CAACC,UAAS,GAAI,IAAG;MAErB,IAAI,CAACsB,UAAU,EAAC;MAEhB,IAAI,CAAClB,GAAE,GAAI,4DAA2D;IAE3E,CAAC;IAED,MAAMmB,KAAK,CAACd,CAAC,EAAE;MAEVA,CAAC,CAACC,cAAc,EAAC;MAEjB,MAAMK,GAAE,GAAI,MAAMC,KAAK,CAAC,6BAA6B;MACrD,MAAMQ,KAAI,GAAI,MAAMT,GAAG,CAACM,IAAI,EAAC;MAE7B,IAAII,KAAI,GAAI,KAAI;MAChB,IAAIC,IAAG,GAAI,IAAG;MAEd,KAAI,IAAIC,KAAKH,KAAK,EAAC;QAEf,IAAKG,CAAC,CAAC/B,KAAI,KAAM,IAAI,CAACA,KAAK,IAAM+B,CAAC,CAAC9B,QAAO,KAAM,IAAI,CAACA,QAAQ,EAAI;UAE7D4B,KAAI,GAAI,IAAG;UACXC,IAAG,GAAIC;UACP;QAEJ;MAEJ;MAEA,IAAGF,KAAK,EAAE;QAEN,IAAIpB,OAAM,GAAIb,YAAY,EAAC;QAE3Ba,OAAO,CAACuB,UAAS,GAAI,IAAG;QACxBvB,OAAO,CAACqB,IAAG,GAAIA,IAAG;QAElB,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MAE1B,OAAO,IAAI,CAAC1B,GAAE,GAAI,8BAA6B;IAEnD,CAAC;IAEDkB,UAAU,GAAE;MAER,IAAI,CAACpB,aAAY,GAAI,CAAC,IAAI,CAACA,aAAY;MAEvC,IAAG,IAAI,CAACA,aAAa,EAAE,IAAI,CAACC,UAAS,GAAI,QAAO,MAC3C,IAAI,CAACA,UAAS,GAAI,iBAAgB;IAC3C;EAEJ;AAEJ","names":["Message","Dashboard","sessionStore","name","components","data","email","password","suName","suEmail","suPassword","isLogged","createAccount","suggestion","msg","session","created","methods","signUp","e","preventDefault","admin","dataJSON","JSON","stringify","req","fetch","method","headers","body","res","json","changeForm","login","users","found","user","u","isLoggedIn","$router","push"],"sourceRoot":"","sources":["C:\\Users\\felip\\Desktop\\Tot Bookstore\\src\\views\\ProfileView.vue"],"sourcesContent":["<template>\r\n\r\n    <div>\r\n    \r\n        <div class=\"center\">\r\n            <Message :msg=\"msg\" v-show=\"msg\" />\r\n            <img class=\"small\" src=\"@/img/user.png\">\r\n        </div>\r\n        \r\n        <div class=\"profile\">\r\n\r\n            <div v-show=\"!session.isLoggedIn\">     \r\n\r\n                <div class=\"signup\" v-show=\"createAccount\">\r\n\r\n                    <h2>Sign Up</h2>\r\n\r\n                    <form @submit=\"signUp\">\r\n\r\n                        <label for=\"nameSignUp\">Nome:</label><br>\r\n                        <input type=\"text\" id=\"nameSignUp\" name=\"nameSignUp\" required v-model=\"suName\"><br><br>\r\n                        \r\n                        <label for=\"emailSignUp\">Email:</label><br>\r\n                        <input type=\"email\" id=\"emailSignUp\" name=\"emailSignUp\" required v-model=\"suEmail\"><br><br>\r\n                        \r\n                        <label for=\"passwordSignUp\">Senha:</label><br>\r\n                        <input type=\"password\" id=\"passwordSignUp\" name=\"passwordSignUp\" required v-model=\"suPassword\"><br><br>\r\n                        \r\n                        <input type=\"submit\" value=\"Criar\"><br><br>\r\n\r\n                    </form>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"login\" v-show=\"!createAccount\">\r\n\r\n                    <h2>Login</h2>\r\n\r\n                    <form @submit=\"login\">\r\n\r\n                        <label for=\"email\">Email:</label><br>\r\n                        <input type=\"email\" id=\"email\" name=\"email\" required v-model=\"email\"><br><br>\r\n                        \r\n                        <label for=\"password\">Senha:</label><br>\r\n                        <input type=\"password\" id=\"password\" name=\"password\" required v-model=\"password\"><br><br>\r\n                        \r\n                        <input type=\"submit\" value=\"Entrar\"><br><br>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n                <div class=\"suggestion\" @click=\"changeForm\">{{suggestion}}</div>    \r\n\r\n            </div>    \r\n\r\n            <Dashboard />\r\n\r\n        </div>\r\n\r\n    </div>\r\n    \r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport Message from '@/components/Message.vue'\r\nimport Dashboard from '@/components/Dashboard.vue'\r\nimport { sessionStore } from '@/store/session'\r\n\r\n\r\nexport default {\r\n\r\n    name: 'Profile',\r\n\r\n    components: {\r\n        Message,\r\n        Dashboard\r\n    },\r\n\r\n    data() {\r\n\r\n        return {\r\n\r\n            email: null,\r\n            password: null,\r\n            suName: null,\r\n            suEmail: null,\r\n            suPassword: null,\r\n            isLogged: false,\r\n            createAccount: false,\r\n            suggestion: \"Criar uma conta\",\r\n            msg: null,\r\n            session:null\r\n\r\n        }\r\n\r\n    },\r\n\r\n    created(){\r\n\r\n        this.session = sessionStore()\r\n    \r\n    },\r\n\r\n\r\n    methods: {  \r\n\r\n       async signUp(e) {\r\n\r\n            e.preventDefault()\r\n\r\n            const data = {\r\n\r\n                name: this.suName,\r\n                email: this.suEmail,\r\n                password: this.suPassword,\r\n                admin:false\r\n\r\n            }\r\n\r\n            const dataJSON = JSON.stringify(data)\r\n\r\n            const req = await fetch(\"http://localhost:3000/users\", {\r\n\r\n                method: \"POST\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: dataJSON\r\n            })\r\n\r\n            const res = await req.json()\r\n            \r\n            this.suName = null\r\n            this.suEmail = null\r\n            this.suPassword = null\r\n\r\n            this.changeForm()\r\n\r\n            this.msg = \"Conta criada com sucesso! Autentique-se pela primeira vez.\"\r\n\r\n       }, \r\n\r\n       async login(e) {\r\n\r\n            e.preventDefault()\r\n\r\n            const req = await fetch(\"http://localhost:3000/users\")\r\n            const users = await req.json()\r\n\r\n            let found = false\r\n            let user = null\r\n\r\n            for(let u of users){\r\n\r\n                if( (u.email === this.email) && (u.password === this.password) ) {\r\n\r\n                    found = true\r\n                    user = u\r\n                    break\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if(found) {\r\n\r\n                let session = sessionStore()\r\n\r\n                session.isLoggedIn = true\r\n                session.user = user\r\n\r\n                this.$router.push(\"/\");\r\n            \r\n            } else this.msg = \"Usuário ou senha incorretos!\"\r\n\r\n        },\r\n        \r\n        changeForm(){\r\n            \r\n            this.createAccount = !this.createAccount\r\n\r\n            if(this.createAccount) this.suggestion = \"Log in\"\r\n            else this.suggestion = \"Criar uma conta\"\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}