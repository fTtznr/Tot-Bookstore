{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from \"pinia\";\nexport const cartStore = defineStore(\"cart\", {\n  state: () => {\n    return {\n      items: []\n    };\n  },\n  actions: {\n    addCart(book) {\n      if (this.items) {\n        let inCart = false;\n        for (let item of this.items) {\n          if (item.id === book.id) {\n            item.qtde += 1;\n            inCart = true;\n            break;\n          }\n        }\n        if (!inCart) {\n          book.qtde = 1;\n          this.items.push(book);\n        }\n      } else {\n        book.qtde = 1;\n        this.items = [book];\n      }\n    },\n    searchCart(book) {\n      let index = -1;\n      for (const [i, item] of this.items.entries()) {\n        if (item.id === book.id) {\n          index = i;\n          break;\n        }\n      }\n      return index;\n    },\n    removeItem(book) {\n      let index = this.searchCart(book);\n      if (index != -1) this.items.splice(index, 1);\n    },\n    increase(book) {\n      let item = this.items[this.searchCart(book)];\n      if (item.qtde < item.quantity) item.qtde++;\n    },\n    decrease(book) {\n      let item = this.items[this.searchCart(book)];\n      if (item.qtde > 1) item.qtde--;\n    },\n    async registerPurchase(userId) {\n      e.preventDefault();\n      const data = {\n        title: this.title,\n        coverImg: this.coverImg,\n        author: this.author,\n        description: this.description,\n        language: this.language,\n        isbn: this.isbn,\n        genres: this.genres,\n        bookFormat: this.bookFormat,\n        edition: this.edition,\n        pages: this.pages,\n        publisher: this.publisher,\n        publishDate: this.publishDate,\n        characters: this.characters,\n        price: this.price,\n        rating: this.rating,\n        quantity: this.quantity,\n        likedPercent: 0\n      };\n      const dataJSON = JSON.stringify(data);\n      const req = await fetch(\"http://localhost:3000/books\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: dataJSON\n      });\n      const res = await req.json();\n      this.title = null, this.coverImg = null, this.author = null, this.description = null, this.language = null, this.isbn = null, this.genres = null, this.bookFormat = null, this.edition = null, this.pages = null, this.publisher = null, this.publishDate = null, this.characters = null, this.price = null, this.rating = null, this.quantity = null;\n      this.msg = \"Livro cadastrado com sucesso!\";\n      bookStore().initBooks();\n    }\n  },\n  getters: {\n    totalPrice() {\n      let total = 0;\n      if (this.items) {\n        for (let item of this.items) total += item.qtde * item.price;\n      }\n      return total;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","cartStore","state","items","actions","addCart","book","inCart","item","id","qtde","push","searchCart","index","i","entries","removeItem","splice","increase","quantity","decrease","registerPurchase","userId","e","preventDefault","data","title","coverImg","author","description","language","isbn","genres","bookFormat","edition","pages","publisher","publishDate","characters","price","rating","likedPercent","dataJSON","JSON","stringify","req","fetch","method","headers","body","res","json","msg","bookStore","initBooks","getters","totalPrice","total"],"sources":["C:/Users/felip/Desktop/Tot Bookstore/src/store/cart.js"],"sourcesContent":["import { defineStore } from \"pinia\"\r\n\r\nexport const cartStore = defineStore(\"cart\", {\r\n\r\n    state: () => {\r\n\r\n        return {\r\n\r\n            items: []\r\n\r\n        }\r\n\r\n    },\r\n\r\n    actions:{\r\n\r\n        addCart(book)\r\n        {\r\n\r\n            if(this.items){\r\n\r\n                let inCart = false\r\n\r\n                for(let item of this.items)\r\n                {\r\n                    if(item.id === book.id) \r\n                    {\r\n\r\n                        item.qtde += 1\r\n                        inCart = true\r\n                        break\r\n                    \r\n                    }\r\n\r\n                }\r\n\r\n                if(!inCart) \r\n                {\r\n                    book.qtde = 1\r\n                    this.items.push(book)\r\n                }\r\n\r\n            }else{\r\n\r\n                book.qtde = 1\r\n                this.items = [book]\r\n            }\r\n\r\n        },\r\n\r\n        searchCart(book){\r\n\r\n            let index = -1\r\n            \r\n            for(const [i, item] of this.items.entries())\r\n            {\r\n\r\n                if(item.id === book.id) \r\n                {\r\n\r\n                    index = i\r\n                    break\r\n                \r\n                }\r\n\r\n            }\r\n\r\n            return index\r\n\r\n        },\r\n\r\n        removeItem(book){\r\n\r\n            let index = this.searchCart(book)\r\n\r\n            if(index != -1) this.items.splice(index, 1)\r\n\r\n        },\r\n\r\n        increase(book){\r\n\r\n            let item = this.items[this.searchCart(book)] \r\n\r\n            if(item.qtde < item.quantity ) item.qtde++\r\n\r\n        },\r\n\r\n        decrease(book){\r\n\r\n            let item = this.items[this.searchCart(book)] \r\n \r\n            if(item.qtde > 1) item.qtde--\r\n              \r\n        },\r\n\r\n        async registerPurchase(userId) {\r\n\r\n            e.preventDefault()\r\n\r\n            const data = {\r\n\r\n                title: this.title,\r\n                coverImg: this.coverImg,\r\n                author: this.author,\r\n                description: this.description,\r\n                language: this.language,\r\n                isbn: this.isbn,\r\n                genres: this.genres,\r\n                bookFormat: this.bookFormat,\r\n                edition: this.edition,\r\n                pages: this.pages,\r\n                publisher: this.publisher,\r\n                publishDate: this.publishDate,\r\n                characters: this.characters,\r\n                price: this.price,\r\n                rating: this.rating,\r\n                quantity: this.quantity,\r\n                likedPercent: 0\r\n\r\n            }\r\n\r\n            const dataJSON = JSON.stringify(data)\r\n\r\n            const req = await fetch(\"http://localhost:3000/books\", {\r\n\r\n                method: \"POST\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: dataJSON\r\n            })\r\n\r\n            const res = await req.json()\r\n\r\n            this.title = null,\r\n            this.coverImg = null,\r\n            this.author = null,\r\n            this.description = null,\r\n            this.language = null,\r\n            this.isbn = null,\r\n            this.genres = null,\r\n            this.bookFormat = null,\r\n            this.edition = null,\r\n            this.pages = null,\r\n            this.publisher = null,\r\n            this.publishDate = null,\r\n            this.characters = null,\r\n            this.price = null,\r\n            this.rating = null,\r\n            this.quantity = null\r\n\r\n            this.msg = \"Livro cadastrado com sucesso!\"\r\n\r\n            bookStore().initBooks()\r\n\r\n        }, \r\n\r\n    },\r\n\r\n    getters: {\r\n\r\n        totalPrice(){\r\n\r\n            let total = 0\r\n\r\n            if(this.items)\r\n            {\r\n\r\n                for(let item of this.items) total += item.qtde * item.price\r\n\r\n            }\r\n\r\n            return total\r\n\r\n        }\r\n\r\n    }\r\n\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}