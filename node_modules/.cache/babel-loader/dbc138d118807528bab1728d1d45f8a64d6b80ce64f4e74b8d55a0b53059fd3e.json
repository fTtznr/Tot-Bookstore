{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-648a0436\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = {\n  class: \"modal-content\"\n};\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"clearfix\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.block && $options.block(...args))\n  }, _toDisplayString($props.data.title), 1 /* TEXT */), _createElementVNode(\"div\", {\n    id: $data.id,\n    class: \"modal\"\n  }, [_createElementVNode(\"span\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.hide && $options.hide(...args)),\n    class: \"close\",\n    title: \"Fechar\"\n  }, \"×\"), _createElementVNode(\"form\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h1\", null, _toDisplayString($props.data.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($props.data.msg), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.hide && $options.hide(...args)),\n    class: \"cancelbtn\"\n  }, \"Cancelar\"), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.ex && $options.ex(...args)),\n    class: \"confirmbtn\"\n  }, _toDisplayString($props.data.confirmOption), 1 /* TEXT */)])])])], 8 /* PROPS */, _hoisted_1)]);\n}","map":{"version":3,"mappings":";;;;EAUYA,KAAK,EAAC;AAAe;;EAEpBA,KAAK,EAAC;AAAW;;EAKfA,KAAK,EAAC;AAAU;;uBAf5BC,oBA0BM,cAxBLC,oBAA8C;IAArCC,OAAK,yCAAEC,yCAAK;sBAAIC,WAAI,CAACC,KAAK,kBAEnCJ,oBAoBM;IApBAK,EAAE,EAAEC,QAAE;IAAER,KAAK,EAAC;MAElBE,oBAAyD;IAAlDC,OAAK,yCAAEC,uCAAI;IAAEJ,KAAK,EAAC,OAAO;IAACM,KAAK,EAAC;KAAS,GAAC,GAElDJ,oBAcO,QAdPO,UAcO,GAZLP,oBAUM,OAVNQ,UAUM,GARJR,oBAAuB,6BAAjBG,WAAI,CAACC,KAAK,kBAChBJ,oBAAmB,4BAAdG,WAAI,CAACM,GAAG,kBAEbT,oBAGM,OAHNU,UAGM,GAFFV,oBAAuE;IAA/DW,IAAI,EAAC,QAAQ;IAAEV,OAAK,yCAAEC,uCAAI;IAAEJ,KAAK,EAAC;KAAY,UAAQ,GAC9DE,oBAAoF;IAA5EW,IAAI,EAAC,QAAQ;IAAEV,OAAK,yCAAEC,mCAAE;IAAEJ,KAAK,EAAC;sBAAeK,WAAI,CAACS,aAAa","names":["class","_createElementBlock","_createElementVNode","onClick","$options","$props","title","id","$data","_hoisted_2","_hoisted_3","msg","_hoisted_4","type","confirmOption"],"sourceRoot":"","sources":["C:\\Users\\felip\\Desktop\\Tot Bookstore\\src\\components\\Confirmation.vue"],"sourcesContent":["<template>\r\n\r\n   <div>\r\n\r\n    <button @click=\"block\">{{data.title}}</button>\r\n    \r\n    <div :id=\"id\" class=\"modal\">\r\n    \r\n      <span @click=\"hide\" class=\"close\" title=\"Fechar\">×</span>\r\n      \r\n      <form class=\"modal-content\">\r\n      \r\n        <div class=\"container\">\r\n          \r\n          <h1>{{data.title}}</h1>\r\n          <p>{{data.msg}}</p>\r\n          \r\n          <div class=\"clearfix\">\r\n              <button type=\"button\" @click=\"hide\" class=\"cancelbtn\">Cancelar</button>\r\n              <button type=\"button\" @click=\"ex\" class=\"confirmbtn\">{{data.confirmOption}}</button>\r\n          </div>\r\n      \r\n        </div>\r\n      \r\n      </form>\r\n    \r\n    </div>\r\n\r\n   </div>\r\n    \r\n        \r\n    </template>\r\n    \r\n    <script>\r\n    \r\n    import { bookStore } from '@/store/books';\r\n    \r\n    export default {\r\n    \r\n        name: \"Confirmation\",\r\n    \r\n        props:{\r\n    \r\n            data:  Object\r\n    \r\n        },\r\n\r\n        data(){\r\n\r\n          return{\r\n\r\n            id:null\r\n\r\n          }\r\n\r\n\r\n        },\r\n    \r\n        mounted(){\r\n\r\n          this.id = ++bookStore().deleteCounter\r\n    \r\n          // Get the modal\r\n          let modal = document.getElementById(this.id);\r\n\r\n          alert(modal)\r\n  \r\n          // When the user clicks anywhere outside of the modal, close it\r\n          window.onclick = function(event) { \r\n            if (event.target == modal) { alert(\"funciona\")\r\n                modal.style.display = \"none\";\r\n            }\r\n          }\r\n            \r\n        },\r\n\r\n\r\n        methods:{\r\n\r\n          ex(){\r\n\r\n            this.$emit('confirm')\r\n            this.hide()\r\n\r\n          },\r\n\r\n          hide(){\r\n            document.getElementById(this.id).style.display='none'\r\n          },\r\n\r\n          block(){\r\n            document.getElementById(this.id).style.display='block'\r\n          }\r\n\r\n        }\r\n    \r\n    }\r\n    \r\n    \r\n    </script>\r\n    \r\n    <style scoped>\r\n    \r\n    /* Set a style for all buttons */\r\n    button {\r\n      background-color: #ee5959;\r\n      color: white;\r\n      padding: 14px 20px;\r\n      margin: 8px 0;\r\n      border: none;\r\n      cursor: pointer;\r\n      opacity: 0.9;\r\n      width: 300px;\r\n    }\r\n    \r\n    button:hover {\r\n      opacity:1;\r\n    }\r\n    \r\n    /* Float cancel and delete buttons and add an equal width */\r\n    .cancelbtn, .confirmbtn {\r\n      float: left;\r\n      width: 50%;\r\n    }\r\n    \r\n    /* Add a color to the cancel button */\r\n    .cancelbtn {\r\n      background-color: #ccc;\r\n      color: black;\r\n    }\r\n    \r\n    /* Add a color to the delete button */\r\n    .deletebtn {\r\n      background-color: #f44336;\r\n    }\r\n    \r\n    /* Add padding and center-align text to the container */\r\n    .container {\r\n      padding: 16px;\r\n      text-align: center;\r\n    }\r\n    \r\n    /* The Modal (background) */\r\n    .modal {\r\n      display: none; /* Hidden by default */\r\n      position: fixed; /* Stay in place */\r\n      z-index: 1; /* Sit on top */\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%; /* Full width */\r\n      height: 100%; /* Full height */\r\n      overflow: auto; /* Enable scroll if needed */\r\n      background-color: #474e5d;\r\n      padding-top: 50px;\r\n    }\r\n    \r\n    /* Modal Content/Box */\r\n    .modal-content {\r\n      background-color: #fefefe;\r\n      margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\r\n      border: 1px solid #888;\r\n      width: 80%; /* Could be more or less, depending on screen size */\r\n    }\r\n    \r\n    /* Style the horizontal ruler */\r\n    hr {\r\n      border: 1px solid #f1f1f1;\r\n      margin-bottom: 25px;\r\n    }\r\n     \r\n    /* The Modal Close Button (x) */\r\n    .close {\r\n      position: absolute;\r\n      right: 35px;\r\n      top: 15px;\r\n      font-size: 40px;\r\n      font-weight: bold;\r\n      color: #f1f1f1;\r\n    }\r\n    \r\n    .close:hover,\r\n    .close:focus {\r\n      color: #f44336;\r\n      cursor: pointer;\r\n    }\r\n    \r\n    /* Clear floats */\r\n    .clearfix::after {\r\n      content: \"\";\r\n      clear: both;\r\n      display: table;\r\n    }\r\n    \r\n    /* Change styles for cancel button and delete button on extra small screens */\r\n    @media screen and (max-width: 300px) {\r\n      .cancelbtn, .deletebtn {\r\n         width: 100%;\r\n      }\r\n    }\r\n    </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}