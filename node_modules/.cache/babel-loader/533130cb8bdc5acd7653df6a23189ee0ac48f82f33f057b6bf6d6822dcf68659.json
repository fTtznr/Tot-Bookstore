{"ast":null,"code":"import ProductBox from '@/components/ProductBox.vue';\nexport default {\n  name: \"Search\",\n  components: {\n    ProductBox\n  },\n  data() {\n    return {\n      books: null\n    };\n  },\n  mounted() {\n    this.books = JSON.parse(localStorage.getItem(\"searchResult\"));\n    this.$forceUpdate();\n    const rangeInput = document.querySelectorAll(\".range-input input\"),\n      priceInput = document.querySelectorAll(\".price-input input\"),\n      range = document.querySelector(\".slider .progress\");\n    let priceGap = 1000;\n    priceInput.forEach(input => {\n      input.addEventListener(\"input\", e => {\n        let minPrice = parseInt(priceInput[0].value),\n          maxPrice = parseInt(priceInput[1].value);\n        if (maxPrice - minPrice >= priceGap && maxPrice <= rangeInput[1].max) {\n          if (e.target.className === \"input-min\") {\n            rangeInput[0].value = minPrice;\n            range.style.left = minPrice / rangeInput[0].max * 100 + \"%\";\n          } else {\n            rangeInput[1].value = maxPrice;\n            range.style.right = 100 - maxPrice / rangeInput[1].max * 100 + \"%\";\n          }\n        }\n      });\n    });\n    rangeInput.forEach(input => {\n      input.addEventListener(\"input\", e => {\n        let minVal = parseInt(rangeInput[0].value),\n          maxVal = parseInt(rangeInput[1].value);\n        if (maxVal - minVal < priceGap) {\n          if (e.target.className === \"range-min\") {\n            rangeInput[0].value = maxVal - priceGap;\n          } else {\n            rangeInput[1].value = minVal + priceGap;\n          }\n        } else {\n          priceInput[0].value = minVal;\n          priceInput[1].value = maxVal;\n          range.style.left = minVal / rangeInput[0].max * 100 + \"%\";\n          range.style.right = 100 - maxVal / rangeInput[1].max * 100 + \"%\";\n        }\n      });\n    });\n  }\n};","map":{"version":3,"mappings":"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","names":["ProductBox","name","components","data","books","mounted","JSON","parse","localStorage","getItem","$forceUpdate","rangeInput","document","querySelectorAll","priceInput","range","querySelector","priceGap","forEach","input","addEventListener","e","minPrice","parseInt","value","maxPrice","max","target","className","style","left","right","minVal","maxVal"],"sourceRoot":"","sources":["C:\\Users\\felip\\Desktop\\Tot Bookstore\\src\\views\\SearchView.vue"],"sourcesContent":["<template>\r\n\r\n    <div class=\"remove-book-form\">\r\n\r\n        <h2 class=\"center\">Buscar Livro</h2>\r\n        <h4 class=\"center\">Remoção ou Atualização de Dados</h4>\r\n\r\n        <form>\r\n\r\n            <ul>\r\n\r\n                <li class=\"form-field\">\r\n                    <label for=\"title\">Título do Livro:</label><br>\r\n                    <input type=\"text\" id=\"name\" name=\"title\"><br><br>\r\n                </li>\r\n                \r\n                <li class=\"form-field\">                    \r\n                    <label for=\"bookID\">ID do livro:</label><br>\r\n                    <input type=\"book-id\" id=\"book-id\" name=\"book-id\"><br><br>\r\n                </li>                    \r\n                \r\n                <li class=\"form-field\">\r\n                    <label for=\"author\">Autor</label><br>\r\n                    <input type=\"text\" id=\"author\" name=\"author\"><br><br>\r\n                </li>\r\n\r\n                <li class=\"form-field\">\r\n                    <label for=\"isbn\">ISBN</label><br>\r\n                    <input type=\"isbn\" id=\"isbn\" name=\"isbn\"><br><br>\r\n                </li>\r\n\r\n                <li>\r\n                    <div class=\"price-input\">\r\n                        <div class=\"field\">\r\n                        <span>Min</span>\r\n                        <input type=\"number\" class=\"input-min\" value=\"2500\">\r\n                        </div>\r\n                        <div class=\"separator\">-</div>\r\n                        <div class=\"field\">\r\n                        <span>Max</span>\r\n                        <input type=\"number\" class=\"input-max\" value=\"7500\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"slider\">\r\n                        <div class=\"progress\"></div>\r\n                    </div>\r\n                    <div class=\"range-input\">\r\n                        <input type=\"range\" class=\"range-min\" min=\"0\" max=\"10000\" value=\"2500\" step=\"100\">\r\n                        <input type=\"range\" class=\"range-max\" min=\"0\" max=\"10000\" value=\"7500\" step=\"100\">\r\n                    </div>\r\n\r\n                </li>\r\n                \r\n            </ul>\r\n\r\n            <input type=\"submit\" class=\"center\" value=\"Buscar Livro\">\r\n\r\n        </form>\r\n\r\n    </div>\r\n\r\n    <ProductBox :books=\"books\"/>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport ProductBox from '@/components/ProductBox.vue'\r\n\r\nexport default\r\n{\r\n    name: \"Search\",\r\n\r\n    components: \r\n    { \r\n      ProductBox\r\n    },\r\n    \r\n    data(){\r\n\r\n        return{ books: null }\r\n\r\n    },\r\n    \r\n    mounted(){\r\n        \r\n        this.books = JSON.parse(localStorage.getItem(\"searchResult\"))\r\n        this.$forceUpdate();\r\n\r\n        const rangeInput = document.querySelectorAll(\".range-input input\"),\r\n        priceInput = document.querySelectorAll(\".price-input input\"),\r\n        range = document.querySelector(\".slider .progress\");\r\n        let priceGap = 1000;\r\n\r\n        priceInput.forEach(input =>{\r\n            input.addEventListener(\"input\", e =>{\r\n                let minPrice = parseInt(priceInput[0].value),\r\n                maxPrice = parseInt(priceInput[1].value);\r\n                \r\n                if((maxPrice - minPrice >= priceGap) && maxPrice <= rangeInput[1].max){\r\n                    if(e.target.className === \"input-min\"){\r\n                        rangeInput[0].value = minPrice;\r\n                        range.style.left = ((minPrice / rangeInput[0].max) * 100) + \"%\";\r\n                    }else{\r\n                        rangeInput[1].value = maxPrice;\r\n                        range.style.right = 100 - (maxPrice / rangeInput[1].max) * 100 + \"%\";\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        rangeInput.forEach(input =>{\r\n            input.addEventListener(\"input\", e =>{\r\n                let minVal = parseInt(rangeInput[0].value),\r\n                maxVal = parseInt(rangeInput[1].value);\r\n\r\n                if((maxVal - minVal) < priceGap){\r\n                    if(e.target.className === \"range-min\"){\r\n                        rangeInput[0].value = maxVal - priceGap\r\n                    }else{\r\n                        rangeInput[1].value = minVal + priceGap;\r\n                    }\r\n                }else{\r\n                    priceInput[0].value = minVal;\r\n                    priceInput[1].value = maxVal;\r\n                    range.style.left = ((minVal / rangeInput[0].max) * 100) + \"%\";\r\n                    range.style.right = 100 - (maxVal / rangeInput[1].max) * 100 + \"%\";\r\n                }\r\n            });\r\n        });\r\n\r\n    }\r\n    \r\n\r\n}\r\n\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}